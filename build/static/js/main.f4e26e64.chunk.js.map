{"version":3,"sources":["Store.js","img/logo.png","img/emoji.svg","img/img.jpg","App.js","serviceWorker.js","Provider.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Store","n","React","createContext","module","exports","p","Filter","lazy","e","then","bind","Edit","Image","App","react_default","a","createElement","Suspense","fallback","className","id","src","logo","alt","emoji","Component","contextType","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Provider","img","filters","name","filter","brightness","blur","contrast","grayscale","hue","invert","opacity","saturate","sepia","changeFilter","_this","setState","edit","value","Object","objectSpread","defineProperty","store","this","props","children","ReactDOM","render","src_Provider","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f4e26e64.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Store = React.createContext()\r\n\r\nexport default Store","module.exports = __webpack_public_path__ + \"static/media/logo.c17f133d.png\";","module.exports = __webpack_public_path__ + \"static/media/emoji.02f007ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/img.eb99ab35.jpg\";","import React from 'react'\nimport Store from './Store'\nimport logo from './img/logo.png'\nimport emoji from './img/emoji.svg'\nconst Filter = React.lazy(() => import('./components/Filter'))\nconst Edit = React.lazy(() => import('./components/Edit'))\nconst Image = React.lazy(() => import('./components/Image'))\n\nclass App extends React.Component {\n\tstatic contextType = Store\n\trender() {\n\t\treturn (\n\t\t\t<React.Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<img id='logo' src={logo} alt='logo' />\n\t\t\t\t\t<Image />\n\t\t\t\t\t<Edit />\n\t\t\t\t\t<Filter />\n\t\t\t\t\t<h1 className='footer'>\n\t\t\t\t\t\tMade by <img src={emoji} alt='emoji' />\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t</React.Suspense>\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport Store from './Store'\r\nimport img from './img/img.jpg'\r\n\r\nclass Provider extends React.Component {\r\n\tstate = {\r\n\t\timg,\r\n\t\tfilters: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Normal',\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tbrightness: 100,\r\n\t\t\t\t\tblur: 0,\r\n\t\t\t\t\tcontrast: 100,\r\n\t\t\t\t\tgrayscale: 0,\r\n\t\t\t\t\thue: 0,\r\n\t\t\t\t\tinvert: 0,\r\n\t\t\t\t\topacity: 100,\r\n\t\t\t\t\tsaturate: 100,\r\n\t\t\t\t\tsepia: 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'B & W',\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tbrightness: 105,\r\n\t\t\t\t\tblur: 0,\r\n\t\t\t\t\tcontrast: 110,\r\n\t\t\t\t\tgrayscale: 100,\r\n\t\t\t\t\thue: 0,\r\n\t\t\t\t\tinvert: 0,\r\n\t\t\t\t\topacity: 100,\r\n\t\t\t\t\tsaturate: 100,\r\n\t\t\t\t\tsepia: 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Bright',\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tbrightness: 140,\r\n\t\t\t\t\tblur: 0,\r\n\t\t\t\t\tcontrast: 130,\r\n\t\t\t\t\tgrayscale: 0,\r\n\t\t\t\t\thue: 0,\r\n\t\t\t\t\tinvert: 0,\r\n\t\t\t\t\topacity: 80,\r\n\t\t\t\t\tsaturate: 100,\r\n\t\t\t\t\tsepia: 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Faded',\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tbrightness: 110,\r\n\t\t\t\t\tblur: 0,\r\n\t\t\t\t\tcontrast: 120,\r\n\t\t\t\t\tgrayscale: 0,\r\n\t\t\t\t\thue: 0,\r\n\t\t\t\t\tinvert: 0,\r\n\t\t\t\t\topacity: 75,\r\n\t\t\t\t\tsaturate: 80,\r\n\t\t\t\t\tsepia: 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Sharp',\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tbrightness: 160,\r\n\t\t\t\t\tblur: 0,\r\n\t\t\t\t\tcontrast: 140,\r\n\t\t\t\t\tgrayscale: 0,\r\n\t\t\t\t\thue: 0,\r\n\t\t\t\t\tinvert: 0,\r\n\t\t\t\t\topacity: 100,\r\n\t\t\t\t\tsaturate: 100,\r\n\t\t\t\t\tsepia: 0\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Old',\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tbrightness: 110,\r\n\t\t\t\t\tblur: 0,\r\n\t\t\t\t\tcontrast: 95,\r\n\t\t\t\t\tgrayscale: 0,\r\n\t\t\t\t\thue: 0,\r\n\t\t\t\t\tinvert: 0,\r\n\t\t\t\t\topacity: 90,\r\n\t\t\t\t\tsaturate: 1,\r\n\t\t\t\t\tsepia: 100\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Negetive',\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\tbrightness: 115,\r\n\t\t\t\t\tblur: 0,\r\n\t\t\t\t\tcontrast: 100,\r\n\t\t\t\t\tgrayscale: 0,\r\n\t\t\t\t\thue: 0,\r\n\t\t\t\t\tinvert: 100,\r\n\t\t\t\t\topacity: 100,\r\n\t\t\t\t\tsaturate: 100,\r\n\t\t\t\t\tsepia: 0\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\tfilter: {\r\n\t\t\tbrightness: 100,\r\n\t\t\tblur: 0,\r\n\t\t\tcontrast: 100,\r\n\t\t\tgrayscale: 0,\r\n\t\t\thue: 0,\r\n\t\t\tinvert: 0,\r\n\t\t\topacity: 100,\r\n\t\t\tsaturate: 100,\r\n\t\t\tsepia: 0\r\n\t\t}\r\n\t}\r\n\tchangeFilter = filter => {\r\n\t\tthis.setState({ filter })\r\n\t}\r\n\tedit = (name, value) => {\r\n\t\tthis.setState({\r\n\t\t\tfilter: {\r\n\t\t\t\t...this.state.filter,\r\n\t\t\t\t[name]: value\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\trender() {\r\n\t\tconst store = {\r\n\t\t\t...this.state,\r\n\t\t\tchangeFilter: this.changeFilter,\r\n\t\t\tedit: this.edit\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Store.Provider value={store}>{this.props.children}</Store.Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Provider\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport Provider from './Provider'\nReactDOM.render(\n\t<Provider>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n \nserviceWorker.register()\n "],"sourceRoot":""}